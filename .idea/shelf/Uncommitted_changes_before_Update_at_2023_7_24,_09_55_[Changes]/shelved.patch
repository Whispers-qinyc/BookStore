Index: dao/target/classes/mappers/BookMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dao/target/classes/mappers/BookMapper.xml b/dao/target/classes/mappers/BookMapper.xml
deleted file mode 100644
--- a/dao/target/classes/mappers/BookMapper.xml	(revision 4f43aa26c3a87a4356b63f3546b67bce89f1593b)
+++ /dev/null	(revision 4f43aa26c3a87a4356b63f3546b67bce89f1593b)
@@ -1,26 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!DOCTYPE mapper
-        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
-        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
-<mapper namespace="com.briup.bookstore.mapper.BookMapper">
-
-    <resultMap id="BaseResultMap" type="com.briup.bookstore.po.Book">
-            <id property="id" column="id" jdbcType="INTEGER"/>
-            <result property="name" column="name" jdbcType="VARCHAR"/>
-            <result property="cover" column="cover" jdbcType="VARCHAR"/>
-            <result property="description" column="description" jdbcType="VARCHAR"/>
-            <result property="author" column="author" jdbcType="VARCHAR"/>
-            <result property="publisher" column="publisher" jdbcType="VARCHAR"/>
-            <result property="price" column="price" jdbcType="DOUBLE"/>
-            <result property="storeNum" column="store_num" jdbcType="INTEGER"/>
-            <result property="status" column="status" jdbcType="TINYINT"/>
-            <result property="categoryId" column="category_id" jdbcType="INTEGER"/>
-    </resultMap>
-
-    <sql id="Base_Column_List">
-        id,name,cover,
-        description,author,publisher,
-        price,store_num,status,
-        category_id
-    </sql>
-</mapper>
Index: admin-api/target/classes/application.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/admin-api/target/classes/application.yaml b/admin-api/target/classes/application.yaml
deleted file mode 100644
--- a/admin-api/target/classes/application.yaml	(revision 4f43aa26c3a87a4356b63f3546b67bce89f1593b)
+++ /dev/null	(revision 4f43aa26c3a87a4356b63f3546b67bce89f1593b)
@@ -1,3 +0,0 @@
-# 端口
-server:
-  port: 9999
\ No newline at end of file
Index: dao/target/classes/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/dao/target/classes/application.properties b/dao/target/classes/application.properties
deleted file mode 100644
--- a/dao/target/classes/application.properties	(revision 4f43aa26c3a87a4356b63f3546b67bce89f1593b)
+++ /dev/null	(revision 4f43aa26c3a87a4356b63f3546b67bce89f1593b)
@@ -1,18 +0,0 @@
-# \u6570\u636E\u6E90\u914D\u7F6E
-spring.datasource.driver-class-name = com.mysql.cj.jdbc.Driver
-# spring.datasource.url = jdbc:mysql://10.0.1.183:3306/estore?characterEncoding=utf-8&serverTimezone=Asia/Shanghai&allowMultiQueries=true
-spring.datasource.url=jdbc:mysql://localhost:3306/book_store?characterEncoding=utf-8&serverTimezone=Asia/Shanghai&allowMultiQueries=true
-spring.datasource.username = root
-spring.datasource.password = root
-
-# Mybatis\u914D\u7F6E
-# \u914D\u7F6EXML\u6620\u5C04\u6587\u4EF6\u4E2D\u6307\u5B9A\u7684\u5B9E\u4F53\u7C7B\u522B\u540D\u8DEF\u5F84
-mybatis.type-aliases-package = com.briup.bean
-# \u914D\u7F6EMyBatis\u7684xml\u914D\u7F6E\u6587\u4EF6\u8DEF\u5F84
-mybatis.mapper-locations = classpath:mappers/*.xml
-# \u5F00\u542F\u9A7C\u5CF0uName\u81EA\u52A8\u6620\u5C04\u5230u_name
-mybatis.configuration.map-underscore-to-camel-case = true
-
-
-# \u914D\u7F6Emapper\u5C42\u65E5\u5FD7\u8F93\u51FA\u7C7B\u578B\u4E3Adebug
-logging.level.com.briup.bookstore.mapper = debug
\ No newline at end of file
Index: dao/target/classes/mappers/OrderMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dao/target/classes/mappers/OrderMapper.xml b/dao/target/classes/mappers/OrderMapper.xml
deleted file mode 100644
--- a/dao/target/classes/mappers/OrderMapper.xml	(revision 4f43aa26c3a87a4356b63f3546b67bce89f1593b)
+++ /dev/null	(revision 4f43aa26c3a87a4356b63f3546b67bce89f1593b)
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!DOCTYPE mapper
-        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
-        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
-<mapper namespace="com.briup.bookstore.mapper.OrderMapper">
-
-    <resultMap id="BaseResultMap" type="com.briup.bookstore.po.Order">
-            <id property="id" column="id" jdbcType="INTEGER"/>
-            <result property="userId" column="user_id" jdbcType="INTEGER"/>
-            <result property="addressId" column="address_id" jdbcType="INTEGER"/>
-            <result property="createDate" column="create_date" jdbcType="TIMESTAMP"/>
-            <result property="payWay" column="pay_way" jdbcType="VARCHAR"/>
-            <result property="trackingNumber" column="tracking_number" jdbcType="INTEGER"/>
-            <result property="distributionMode" column="distribution_mode" jdbcType="VARCHAR"/>
-            <result property="status" column="status" jdbcType="INTEGER"/>
-            <result property="payDate" column="pay_date" jdbcType="TIMESTAMP"/>
-    </resultMap>
-
-    <sql id="Base_Column_List">
-        id,user_id,address_id,
-        create_date,pay_way,tracking_number,
-        distribution_mode,status,pay_date
-    </sql>
-</mapper>
Index: dao/target/classes/mappers/ShopcarMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dao/target/classes/mappers/ShopcarMapper.xml b/dao/target/classes/mappers/ShopcarMapper.xml
deleted file mode 100644
--- a/dao/target/classes/mappers/ShopcarMapper.xml	(revision 4f43aa26c3a87a4356b63f3546b67bce89f1593b)
+++ /dev/null	(revision 4f43aa26c3a87a4356b63f3546b67bce89f1593b)
@@ -1,18 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!DOCTYPE mapper
-        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
-        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
-<mapper namespace="com.briup.bookstore.mapper.ShopcarMapper">
-
-    <resultMap id="BaseResultMap" type="com.briup.bookstore.po.Shopcar">
-            <id property="id" column="id" jdbcType="INTEGER"/>
-            <result property="userId" column="user_id" jdbcType="INTEGER"/>
-            <result property="bookId" column="book_id" jdbcType="INTEGER"/>
-            <result property="num" column="num" jdbcType="OTHER"/>
-    </resultMap>
-
-    <sql id="Base_Column_List">
-        id,user_id,book_id,
-        num
-    </sql>
-</mapper>
Index: dao/target/classes/mappers/CategoryMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dao/target/classes/mappers/CategoryMapper.xml b/dao/target/classes/mappers/CategoryMapper.xml
deleted file mode 100644
--- a/dao/target/classes/mappers/CategoryMapper.xml	(revision 4f43aa26c3a87a4356b63f3546b67bce89f1593b)
+++ /dev/null	(revision 4f43aa26c3a87a4356b63f3546b67bce89f1593b)
@@ -1,84 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!DOCTYPE mapper
-        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
-        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
-<mapper namespace="com.briup.bookstore.mapper.CategoryMapper">
-
-    <resultMap id="BaseResultMap" type="com.briup.bookstore.po.Category">
-            <id property="id" column="id" jdbcType="INTEGER"/>
-            <result property="name" column="name" jdbcType="VARCHAR"/>
-            <result property="description" column="description" jdbcType="VARCHAR"/>
-            <result property="parentId" column="parent_id" jdbcType="INTEGER"/>
-    </resultMap>
-
-    <resultMap id="ParentResultMap" type="com.briup.bookstore.vo.CategoryInfoVO">
-        <id property="id" column="pId" jdbcType="INTEGER"/>
-        <result property="name" column="pName" jdbcType="VARCHAR"/>
-        <result property="description" column="pDescription" jdbcType="VARCHAR"/>
-        <result property="parentId" column="pParentId" jdbcType="INTEGER"/>
-        <association property="children" resultMap="ChildrenResultMap"/>
-    </resultMap>
-
-    <resultMap id="ChildrenResultMap" type="com.briup.bookstore.vo.CategoryInfoVO">
-        <id property="id" column="cId" jdbcType="INTEGER"/>
-        <result property="name" column="cName" jdbcType="VARCHAR"/>
-        <result property="description" column="cDescription" jdbcType="VARCHAR"/>
-        <result property="parentId" column="cParentId" jdbcType="INTEGER"/>
-    </resultMap>
-
-    <sql id="Base_Column_List">
-        id,name,description,
-        parent_id
-    </sql>
-
-    <!--查询所有分类信息，如果存在分类名称，根据分类名称模糊匹配全部数据-->
-    <select id="selectAllCategoryByName" resultMap="ParentResultMap">
-        SELECT
-            c.id cId,c.`name` cName,c.description cDescription,c.parent_id cParentId,
-            p.id pId,p.`name` pName,p.description pDescription,p.parent_id pParentId
-        FROM
-            es_category c,
-            es_category p
-        WHERE
-            c.parent_id = p.id
-        <if test="name != null and name != ''">
-            AND(p.name LIKE concat('%',#{name},'%') OR c.name LIKE concat('%',#{name},'%'))
-        </if>
-    </select>
-
-    <!--查询全部分类信息-->
-    <select id="selectAllCategory" resultType="com.briup.bookstore.po.Category">
-        SELECT
-            <include refid="Base_Column_List"/>
-        FROM es_category
-    </select>
-
-    <!--根据分类ID获取分类信息-->
-    <select id="selectCategoryById" resultType="com.briup.bookstore.po.Category">
-        SELECT
-            <include refid="Base_Column_List"/>
-        FROM es_category
-        WHERE id = #{id}
-    </select>
-
-    <!--新增分类-->
-    <insert id="insertCategory">
-        INSERT INTO es_category (name, description, parent_id )
-        VALUES
-            (#{name},#{description},#{parentId})
-    </insert>
-
-    <!--根据分类ID更新分类信息-->
-    <update id="updateCategoryById">
-        UPDATE es_category
-        SET name = #{name},description = #{description},parent_id = #{parentId}
-        WHERE id = #{id}
-    </update>
-
-    <!--批量删除分类信息-->
-    <delete id="deleteBatchIds">
-        DELETE FROM
-            es_category
-        WHERE id IN (${ids})
-    </delete>
-</mapper>
Index: dao/target/classes/mappers/AddressMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dao/target/classes/mappers/AddressMapper.xml b/dao/target/classes/mappers/AddressMapper.xml
deleted file mode 100644
--- a/dao/target/classes/mappers/AddressMapper.xml	(revision 4f43aa26c3a87a4356b63f3546b67bce89f1593b)
+++ /dev/null	(revision 4f43aa26c3a87a4356b63f3546b67bce89f1593b)
@@ -1,20 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!DOCTYPE mapper
-        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
-        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
-<mapper namespace="com.briup.bookstore.mapper.AddressMapper">
-
-    <resultMap id="BaseResultMap" type="com.briup.bookstore.po.Address">
-            <id property="id" column="id" jdbcType="INTEGER"/>
-            <result property="receiverName" column="receiver_name" jdbcType="VARCHAR"/>
-            <result property="urbanAddr" column="urban_addr" jdbcType="VARCHAR"/>
-            <result property="detailAddr" column="detail_addr" jdbcType="VARCHAR"/>
-            <result property="phone" column="phone" jdbcType="CHAR"/>
-            <result property="userId" column="user_id" jdbcType="INTEGER"/>
-    </resultMap>
-
-    <sql id="Base_Column_List">
-        id,receiver_name,urban_addr,
-        detail_addr,phone,user_id
-    </sql>
-</mapper>
Index: user-api/target/classes/application.yaml
===================================================================
diff --git a/user-api/target/classes/application.yaml b/user-api/target/classes/application.yaml
deleted file mode 100644
--- a/user-api/target/classes/application.yaml	(revision 4f43aa26c3a87a4356b63f3546b67bce89f1593b)
+++ /dev/null	(revision 4f43aa26c3a87a4356b63f3546b67bce89f1593b)
@@ -1,3 +0,0 @@
-# 配置端口
-server:
-  port: 7777
\ No newline at end of file
Index: dao/target/classes/mappers/UserMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dao/target/classes/mappers/UserMapper.xml b/dao/target/classes/mappers/UserMapper.xml
deleted file mode 100644
--- a/dao/target/classes/mappers/UserMapper.xml	(revision 4f43aa26c3a87a4356b63f3546b67bce89f1593b)
+++ /dev/null	(revision 4f43aa26c3a87a4356b63f3546b67bce89f1593b)
@@ -1,110 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!DOCTYPE mapper
-        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
-        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
-<mapper namespace="com.briup.bookstore.mapper.UserMapper">
-
-    <resultMap id="BaseResultMap" type="com.briup.bookstore.po.User">
-            <id property="id" column="id" jdbcType="INTEGER"/>
-            <result property="username" column="username" jdbcType="VARCHAR"/>
-            <result property="password" column="password" jdbcType="VARCHAR"/>
-            <result property="phone" column="phone" jdbcType="CHAR"/>
-            <result property="avatar" column="avatar" jdbcType="VARCHAR"/>
-            <result property="gender" column="gender" jdbcType="CHAR"/>
-            <result property="status" column="status" jdbcType="TINYINT"/>
-            <result property="birthday" column="birthday" jdbcType="DATE"/>
-            <result property="registerTime" column="register_time" jdbcType="TIMESTAMP"/>
-            <result property="roleId" column="role_id" jdbcType="INTEGER"/>
-            <result property="isVip" column="is_vip" jdbcType="BIT"/>
-            <result property="vipExpirationTime" column="vip_expiration_time" jdbcType="TIMESTAMP"/>
-    </resultMap>
-
-    <sql id="Base_Column_List">
-        id,username,password,
-        phone,avatar,gender,
-        status,birthday,register_time,
-        role_id,is_vip,vip_expiration_time
-    </sql>
-
-
-    <!--根据用户名和密码查询指定用户-->
-    <select id="getUserByUsernameAndPassword" resultType="com.briup.bookstore.po.User">
-        SELECT
-            <include refid="Base_Column_List"/>
-        FROM
-            es_user
-        WHERE
-            username = #{username}
-            AND password = #{password}
-    </select>
-
-    <!--查询全部用户，若存在username，根据username模糊查询，若存在status，根据status精确匹配,registerTime作为范围查询-->
-    <select id="getAllUserByUsernameOrStatus0rRegisterTime" resultType="com.briup.bookstore.po.User">
-        SELECT
-        <include refid="Base_Column_List"/>
-        FROM
-        es_user
-        WHERE 1 = 1
-        <if test="username != null and username != '' ">
-            AND username LIKE concat('%',#{username},'%')
-        </if>
-        <if test="status != null and status != '' ">
-            AND status = #{status}
-        </if>
-        <!--如果只存在开始时间-->
-        <if test="registerStartTime != null  and registerEndTime == null  ">
-            AND register_time >= #{registerStartTime}
-        </if>
-        <!--如果只存在结束时间-->
-        <if test="registerStartTime == null  and registerEndTime != null  ">
-            AND register_time &lt;= #{registerEndTime}
-        </if>
-        <!--如果既存在开始时间，也存在结束时间-->
-        <if test="registerStartTime != null  and registerEndTime != null  ">
-            AND register_time BETWEEN #{registerStartTime} AND #{registerEndTime}
-        </if>
-    </select>
-
-    <!--根据用户名查询用户信息条数-->
-    <select id="getCountByUsername" resultType="java.lang.Integer">
-        SELECT
-            count(*)
-        FROM
-            es_user
-        WHERE
-            username = #{username}
-    </select>
-
-    <!--新增-->
-    <insert id="insertUser" parameterType="com.briup.bookstore.dto.UserRegisterDTO">
-        INSERT INTO
-            es_user( username, `password`, phone, avatar, gender, `status`, birthday, role_id )
-        VALUES
-            (#{username},#{password},#{phone},#{avatar},#{gender},#{status},#{birthday},#{roleId})
-    </insert>
-
-    <!--修改用户状态-->
-    <update id="updateUserStatus" parameterType="com.briup.bookstore.dto.UserStatusUpdateDTO">
-        UPDATE es_user
-        SET status = #{status}
-        where id = #{id}
-    </update>
-
-    <!--删除与批量删除用户-->
-    <delete id="deleteBatchIds">
-        DELETE FROM
-            es_user
-        WHERE id IN (${ids})
-    </delete>
-
-    <!--根据用户ID查询用户信息-->
-    <select id="getUserById" resultType="com.briup.bookstore.po.User">
-        SELECT
-            <include refid="Base_Column_List"/>
-        from
-            es_user
-        where id = #{id}
-    </select>
-
-
-</mapper>
Index: common/target/classes/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/common/target/classes/application.yml b/common/target/classes/application.yml
deleted file mode 100644
--- a/common/target/classes/application.yml	(revision 4f43aa26c3a87a4356b63f3546b67bce89f1593b)
+++ /dev/null	(revision 4f43aa26c3a87a4356b63f3546b67bce89f1593b)
@@ -1,27 +0,0 @@
-spring:
-  # 文件上传大小限制
-  servlet:
-    multipart:
-      # 单个文件最大限制
-      max-file-size: 5MB
-      # 单次请求文件最大限制
-      max-request-size: 5MB
-  # 配置路径匹配策略为ant风格
-  mvc:
-    pathmatch:
-      matching-strategy: ant_path_matcher
-
-  # 忽略 null
-  jackson:
-        default-property-inclusion: non_null
-
-# 配置七牛云OSS对象存储
-oss:
-  # 配置AK
-  accessKey: IkpGPlDZBWx9IppOrhrzRs1U9bVqWP2OvgaIMjwI
-  # 配置SK
-  secretKey: 4zMtIlfDE9AQYXM2nPnCey4zuSP_x5yyvHWxUl2K
-  # 配置桶
-  bucket: bbs-school-system
-  # 配置基础域名
-  baseUrl: http://www.qinyc.xyz/
\ No newline at end of file
Index: dao/target/classes/mappers/OrderItemMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dao/target/classes/mappers/OrderItemMapper.xml b/dao/target/classes/mappers/OrderItemMapper.xml
deleted file mode 100644
--- a/dao/target/classes/mappers/OrderItemMapper.xml	(revision 4f43aa26c3a87a4356b63f3546b67bce89f1593b)
+++ /dev/null	(revision 4f43aa26c3a87a4356b63f3546b67bce89f1593b)
@@ -1,18 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!DOCTYPE mapper
-        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
-        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
-<mapper namespace="com.briup.bookstore.mapper.OrderItemMapper">
-
-    <resultMap id="BaseResultMap" type="com.briup.bookstore.po.OrderItem">
-            <id property="id" column="id" jdbcType="INTEGER"/>
-            <result property="orderId" column="order_id" jdbcType="INTEGER"/>
-            <result property="bookId" column="book_id" jdbcType="INTEGER"/>
-            <result property="num" column="num" jdbcType="INTEGER"/>
-    </resultMap>
-
-    <sql id="Base_Column_List">
-        id,order_id,book_id,
-        num
-    </sql>
-</mapper>
Index: dao/src/main/resources/mappers/ext/BookExtendMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dao/src/main/resources/mappers/ext/BookExtendMapper.xml b/dao/src/main/resources/mappers/ext/BookExtendMapper.xml
new file mode 100644
--- /dev/null	(date 1690125709075)
+++ b/dao/src/main/resources/mappers/ext/BookExtendMapper.xml	(date 1690125709075)
@@ -0,0 +1,43 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper
+        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
+        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.briup.bookstore.mapper.ext.BookExtendMapper">
+
+    <resultMap id="BaseResultMap" extends="com.briup.bookstore.mapper.BookMapper.BaseResultMap" type="com.briup.bookstore.po.ext.BookExtend">
+        <association property="category" javaType="com.briup.bookstore.po.Category">
+            <id property="id" column="categoryId"/>
+            <result property="name" column="categoryName"/>
+            <result property="description" column="categoryDescription"/>
+            <result property="parentId" column="parent_id"/>
+        </association>
+    </resultMap>
+
+    <sql id="Base_Column_List">
+        b.id,b.name,cover,b.description,
+        author,publisher,price,store_num,status,
+        c.id categoryId,c.name categoryName,c.description categoryDescription,parent_id
+    </sql>
+
+    <!--条件查询图书信息-->
+    <select id="selectBooksByCondition" resultMap="BaseResultMap">
+        select
+        <include refid="Base_Column_List"/>
+        from es_book b left join es_category c on b.category_id = c.id
+        <where>
+            <if test="bookSearchVO.name != '' and bookSearchVO.name != null">
+                b.name like "%"#{bookSearchVO.name}"%"
+            </if>
+
+            <if test="bookSearchVO.author != '' and bookSearchVO.author != null">
+                and b.author like "%"#{bookSearchVO.author}"%"
+            </if>
+
+            <if test="bookSearchVO.publisher != '' and bookSearchVO.publisher != null">
+                and b.publisher like "%"#{bookSearchVO.publisher}"%"
+            </if>
+        </where>
+    </select>
+
+
+</mapper>
Index: service/src/main/java/com/briup/bookstore/service/impl/BookServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.briup.bookstore.service.impl;\n\n\nimport com.briup.bookstore.service.BookService;\nimport org.springframework.stereotype.Service;\n\n/**\n* @author qinyc\n* @description 针对表【es_book】的数据库操作Service实现\n* @createDate 2023-07-18 21:32:19\n*/\n@Service\npublic class BookServiceImpl implements BookService{\n\n}\n\n\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/src/main/java/com/briup/bookstore/service/impl/BookServiceImpl.java b/service/src/main/java/com/briup/bookstore/service/impl/BookServiceImpl.java
--- a/service/src/main/java/com/briup/bookstore/service/impl/BookServiceImpl.java	(revision 4f43aa26c3a87a4356b63f3546b67bce89f1593b)
+++ b/service/src/main/java/com/briup/bookstore/service/impl/BookServiceImpl.java	(date 1690160880391)
@@ -1,8 +1,22 @@
 package com.briup.bookstore.service.impl;
 
 
+import com.briup.bookstore.exception.BookStoreException;
+import com.briup.bookstore.mapper.BookMapper;
+import com.briup.bookstore.mapper.CategoryMapper;
+import com.briup.bookstore.mapper.ext.BookExtendMapper;
+import com.briup.bookstore.po.Book;
+import com.briup.bookstore.po.Category;
+import com.briup.bookstore.po.ext.BookExtend;
 import com.briup.bookstore.service.BookService;
+import com.briup.bookstore.vo.BookSearchVO;
+import com.github.pagehelper.PageHelper;
+import com.github.pagehelper.PageInfo;
+import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
+import org.springframework.util.StringUtils;
+
+import java.util.List;
 
 /**
 * @author qinyc
@@ -12,6 +26,108 @@
 @Service
 public class BookServiceImpl implements BookService{
 
+    @Autowired
+    private BookMapper bookMapper;
+
+    @Autowired
+    private BookExtendMapper bookExtendMapper;
+
+    @Autowired
+    private CategoryMapper categoryMapper;
+
+    @Override
+    public Book getBookById(Integer id) {
+        return bookMapper.selectBookById(id);
+    }
+
+    @Override
+    public PageInfo<BookExtend> getPageBook(Integer pageNum, Integer pageSize, BookSearchVO bookSearchVO) {
+        // 开启分页
+        PageHelper.startPage(pageNum, pageSize, true);
+        // 条件查询图书信息
+        List<BookExtend> books = bookExtendMapper.selectBooksByCondition(bookSearchVO);
+        // 封装分页对象返回
+        return new PageInfo<>(books);
+    }
+
+    @Override
+    public void saveBook(Book book) {
+        // 参数校验
+        this.validate(book);
+        // 判断分类信息是否存在
+        categoryIsOrNotExist(book.getCategoryId());
+        // 执行添加
+        bookMapper.insertBook(book);
+    }
+
+    @Override
+    public void modifyBook(Book book) {
+        // 参数校验
+        this.validate(book);
+        // 判断图书信息是否存在
+        bookIsOrNotExist(book.getId());
+        // 判断分类信息是否存在
+        categoryIsOrNotExist(book.getCategoryId());
+        // 执行修改，返回是否修改成功
+        bookMapper.updateBook(book);
+    }
+
+    @Override
+    public void removeBook(Integer id) {
+        // 判断图书信息是否存在
+        bookIsOrNotExist(id);
+        // 执行删除
+        bookMapper.deleteBookById(id);
+    }
+
+    @Override
+    public void removeBatchByIds(List<Integer> ids) {
+        // 判断要删除的图书信息是否都存在
+        for (Integer id : ids) {
+            bookIsOrNotExist(id);
+        }
+        // 都存在，则全部删除
+        bookMapper.deleteBookByIds(ids);
+    }
+
+    @Override
+    public void modifyStatus(Integer id, Integer status) {
+        // 判断图书信息是否存在
+        bookIsOrNotExist(id);
+        // 执行修改图书状态
+        bookMapper.updateBookStatus(id,status);
+    }
+
+    // 参数校验方法
+    private void validate(Book book) {
+        if (!StringUtils.hasText(book.getName())) {
+            throw new BookStoreException(BookStoreException.CodeMsgEnum.BOOK_NAME_IS_NULL);
+        }
+
+        if (!StringUtils.hasText(book.getAuthor())) {
+            throw new BookStoreException(BookStoreException.CodeMsgEnum.BOOK_AUTHOR_IS_NULL);
+        }
+
+        if (!StringUtils.hasText(book.getPublisher())) {
+            throw new BookStoreException(BookStoreException.CodeMsgEnum.BOOK_PUBLISHER_IS_NULL);
+        }
+    }
+
+    // 校验图书是否存在
+    private void bookIsOrNotExist(Integer id) {
+        Book book = this.getBookById(id);
+        if (book == null) {
+            throw new BookStoreException(BookStoreException.CodeMsgEnum.BOOK_NOT_EXIST);
+        }
+    }
+
+    // 校验分类是否存在
+    private void categoryIsOrNotExist(Integer id) {
+        Category category = categoryMapper.selectCategoryById(id);
+        if (category == null) {
+            throw new BookStoreException(BookStoreException.CodeMsgEnum.CATEGORY_NOT_EXIST);
+        }
+    }
 }
 
 
Index: dao/src/main/resources/mappers/BookMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper\n        PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"com.briup.bookstore.mapper.BookMapper\">\n\n    <resultMap id=\"BaseResultMap\" type=\"com.briup.bookstore.po.Book\">\n            <id property=\"id\" column=\"id\" jdbcType=\"INTEGER\"/>\n            <result property=\"name\" column=\"name\" jdbcType=\"VARCHAR\"/>\n            <result property=\"cover\" column=\"cover\" jdbcType=\"VARCHAR\"/>\n            <result property=\"description\" column=\"description\" jdbcType=\"VARCHAR\"/>\n            <result property=\"author\" column=\"author\" jdbcType=\"VARCHAR\"/>\n            <result property=\"publisher\" column=\"publisher\" jdbcType=\"VARCHAR\"/>\n            <result property=\"price\" column=\"price\" jdbcType=\"DOUBLE\"/>\n            <result property=\"storeNum\" column=\"store_num\" jdbcType=\"INTEGER\"/>\n            <result property=\"status\" column=\"status\" jdbcType=\"TINYINT\"/>\n            <result property=\"categoryId\" column=\"category_id\" jdbcType=\"INTEGER\"/>\n    </resultMap>\n\n    <sql id=\"Base_Column_List\">\n        id,name,cover,\n        description,author,publisher,\n        price,store_num,status,\n        category_id\n    </sql>\n</mapper>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dao/src/main/resources/mappers/BookMapper.xml b/dao/src/main/resources/mappers/BookMapper.xml
--- a/dao/src/main/resources/mappers/BookMapper.xml	(revision 4f43aa26c3a87a4356b63f3546b67bce89f1593b)
+++ b/dao/src/main/resources/mappers/BookMapper.xml	(date 1690126665200)
@@ -5,22 +5,70 @@
 <mapper namespace="com.briup.bookstore.mapper.BookMapper">
 
     <resultMap id="BaseResultMap" type="com.briup.bookstore.po.Book">
-            <id property="id" column="id" jdbcType="INTEGER"/>
-            <result property="name" column="name" jdbcType="VARCHAR"/>
-            <result property="cover" column="cover" jdbcType="VARCHAR"/>
-            <result property="description" column="description" jdbcType="VARCHAR"/>
-            <result property="author" column="author" jdbcType="VARCHAR"/>
-            <result property="publisher" column="publisher" jdbcType="VARCHAR"/>
-            <result property="price" column="price" jdbcType="DOUBLE"/>
-            <result property="storeNum" column="store_num" jdbcType="INTEGER"/>
-            <result property="status" column="status" jdbcType="TINYINT"/>
-            <result property="categoryId" column="category_id" jdbcType="INTEGER"/>
+        <id property="id" column="id" jdbcType="INTEGER"/>
+        <result property="name" column="name" jdbcType="VARCHAR"/>
+        <result property="cover" column="cover" jdbcType="VARCHAR"/>
+        <result property="description" column="description" jdbcType="VARCHAR"/>
+        <result property="author" column="author" jdbcType="VARCHAR"/>
+        <result property="publisher" column="publisher" jdbcType="VARCHAR"/>
+        <result property="price" column="price" jdbcType="DOUBLE"/>
+        <result property="storeNum" column="store_num" jdbcType="INTEGER"/>
+        <result property="status" column="status" jdbcType="TINYINT"/>
+        <result property="categoryId" column="category_id" jdbcType="INTEGER"/>
     </resultMap>
 
     <sql id="Base_Column_List">
-        id,name,cover,
+        id
+        ,name,cover,
         description,author,publisher,
         price,store_num,status,
         category_id
     </sql>
+
+    <!--添加图书信息-->
+    <insert id="insertBook">
+        insert into es_book(name, cover, description, author, publisher, price, store_num, category_id)
+        values (#{name}, #{cover}, #{description}, #{author}, #{publisher}, #{price}, #{storeNum}, #{categoryId})
+    </insert>
+
+    <!--修改图书信息-->
+    <update id="updateBook">
+        update es_book set name = #{name},
+                           cover = #{cover},
+                           description = #{description},
+                           author = #{author},
+                           publisher = #{publisher},
+                           price = #{price},
+                           store_num = #{storeNum},
+                           category_id = #{categoryId}
+        where id = #{id}
+    </update>
+
+    <!--修改图书状态-->
+    <update id="updateBookStatus">
+        update es_book set status = #{status}
+        where id = #{id}
+    </update>
+
+    <!--根据图书编号删除图书-->
+    <delete id="deleteBookById">
+        delete from es_book where id = #{id}
+    </delete>
+
+    <!--批量删除图书信息-->
+    <delete id="deleteBookByIds">
+        delete from es_book where id in
+        <foreach collection="ids" open="(" close=")" separator="," item="id">
+            #{id}
+        </foreach>
+    </delete>
+
+    <!--根据图书编号查询图书信息-->
+    <select id="selectBookById" resultMap="BaseResultMap">
+        select
+        <include refid="Base_Column_List"/>
+        from es_book
+        where id = #{id}
+    </select>
+
 </mapper>
Index: admin-api/src/main/java/com/briup/bookstore/web/controller/CategoryController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.briup.bookstore.web.controller;\n\nimport com.briup.bookstore.dto.CategoryAddDTO;\nimport com.briup.bookstore.dto.CategoryUpdateDTO;\nimport com.briup.bookstore.po.Category;\nimport com.briup.bookstore.response.Result;\nimport com.briup.bookstore.service.CategoryService;\nimport com.briup.bookstore.vo.CategoryInfoVO;\nimport com.github.pagehelper.PageInfo;\nimport io.swagger.annotations.Api;\nimport io.swagger.annotations.ApiOperation;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.*;\n\nimport java.util.List;\n\n/**\n * @className: CategoryController\n * @Description: 后台管理系统分类相关Controller层\n * @author: qinyc\n * @date: 2023/7/20 17:21\n * @version: v1.0\n */\n@Api(tags = \"分类模块\")\n@RestController\n@RequestMapping(\"/admin\")\npublic class CategoryController {\n    @Autowired\n    private CategoryService categoryService;\n\n    /**\n     * @Author qinyc\n     * @Description 分页多条件查询分类信息\n     * @Version: v1.0\n     * @Date 10:20 2023/7/21\n     * @Param :pageNum\n     * @Param :pageSize\n     * @Param :name\n     * @Return: com.briup.bookstore.response.Result\n     **/\n    @ApiOperation(\"分页多条件查询分类信息\")\n    @GetMapping(\"/getCategoryPage\")\n    public Result getCategoryPage(Integer pageNum,Integer pageSize,String name){\n        PageInfo categoryPageInfo = categoryService.getCategoryPage(pageNum,pageSize,name);\n        return Result.success(categoryPageInfo);\n    }\n\n    /**\n     * @Author qinyc\n     * @Description 查询全部分类\n     * @Version: v1.0\n     * @Date 14:54 2023/7/21\n     * @Param : null\n     * @Return: com.briup.bookstore.response.Result\n     **/\n    @ApiOperation(\"查询全部分类\")\n    @GetMapping(\"/getAllCategory\")\n    public Result getAllCategory(){\n        List<CategoryInfoVO> categoryPageVOS =  categoryService.getAllCategory();\n        return Result.success(categoryPageVOS);\n    }\n\n    /**\n     * @Author qinyc\n     * @Description 根据分类ID获取分类信息\n     * @Version: v1.0\n     * @Date 15:31 2023/7/21\n     * @Param :id\n     * @Return: com.briup.bookstore.response.Result\n     **/\n    @ApiOperation(\"根据分类ID获取分类信息\")\n    @GetMapping(\"/getCategoryById/{id}\")\n    public Result getCategoryById(@PathVariable(\"id\") Integer id){\n        Category category = categoryService.getCategoryById(id);\n        return Result.success(category);\n    }\n\n    /**\n     * @Author qinyc\n     * @Description 新增分类\n     * @Version: v1.0\n     * @Date 3:50 2023/7/23\n     * @Param :categoryAddDTO\n     * @Return: com.briup.bookstore.response.Result\n     **/\n    @ApiOperation(\"新增分类\")\n    @PostMapping(\"/addCategory\")\n    public Result addCategory(@RequestBody CategoryAddDTO categoryAddDTO){\n        categoryService.addCategory(categoryAddDTO);\n        return Result.success();\n    }\n\n\n    /**\n     * @Author qinyc\n     * @Description 修改分类\n     * @Version: v1.0\n     * @Date 4:14 2023/7/23\n     * @Param :categoryUpdateDTO\n     * @Return: com.briup.bookstore.response.Result\n     **/\n    @ApiOperation(\"修改分类\")\n    @PutMapping(\"/updateCategory\")\n    public Result updateCategory(@RequestBody CategoryUpdateDTO categoryUpdateDTO){\n        categoryService.updateCategory(categoryUpdateDTO);\n        return Result.success();\n    }\n\n    /**\n     * @Author qinyc\n     * @Description 删除分类信息(删除+批量删除)\n     * @Version: v1.0\n     * @Date 4:34 2023/7/23\n     * @Param :ids\n     * @Return: com.briup.bookstore.response.Result\n     **/\n    @ApiOperation(\"删除分类信息\")\n    @DeleteMapping(\"/deleteCategory/{ids}\")\n    public Result deleteCategory(@PathVariable(\"ids\") String ids){\n        categoryService.deleteCategory(ids);\n        return Result.success();\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/admin-api/src/main/java/com/briup/bookstore/web/controller/CategoryController.java b/admin-api/src/main/java/com/briup/bookstore/web/controller/CategoryController.java
--- a/admin-api/src/main/java/com/briup/bookstore/web/controller/CategoryController.java	(revision 4f43aa26c3a87a4356b63f3546b67bce89f1593b)
+++ b/admin-api/src/main/java/com/briup/bookstore/web/controller/CategoryController.java	(date 1690114285935)
@@ -23,7 +23,7 @@
  */
 @Api(tags = "分类模块")
 @RestController
-@RequestMapping("/admin")
+@RequestMapping("/category")
 public class CategoryController {
     @Autowired
     private CategoryService categoryService;
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1690114285955)
+++ b/.idea/.gitignore	(date 1690114285955)
@@ -0,0 +1,8 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Editor-based HTTP Client requests
+/httpRequests/
+# Datasource local storage ignored files
+/dataSources/
+/dataSources.local.xml
Index: common/src/main/java/com/briup/bookstore/vo/BookShowVO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/common/src/main/java/com/briup/bookstore/vo/BookShowVO.java b/common/src/main/java/com/briup/bookstore/vo/BookShowVO.java
new file mode 100644
--- /dev/null	(date 1690121309261)
+++ b/common/src/main/java/com/briup/bookstore/vo/BookShowVO.java	(date 1690121309261)
@@ -0,0 +1,49 @@
+package com.briup.bookstore.vo;
+
+import com.fasterxml.jackson.annotation.JsonIgnore;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+
+/**
+ * @ClassName: BookShowVO
+ * @Description: 图书展示VO对象
+ * @Author: songjl
+ * @Date: 2023/7/21 09:12
+ * @Version: v1.0
+ */
+@ApiModel("图书展示实体")
+@Data
+public class BookShowVO {
+    
+    @ApiModelProperty("图书名称")
+    private String name;
+
+    @ApiModelProperty("图书封面图片")
+    private String cover;
+
+    @ApiModelProperty("图书简介")
+    private String description;
+
+    @ApiModelProperty("图书作者")
+    private String author;
+
+    @ApiModelProperty("图书出版社")
+    private String publisher;
+
+    @ApiModelProperty("图书价格")
+    private Double price;
+
+    @ApiModelProperty("库存数量")
+    private Integer storeNum;
+
+    @ApiModelProperty("图书状态  0: 上架 1：下架")
+    private Integer status;
+
+    @ApiModelProperty("图书分类ID")
+    @JsonIgnore
+    private Integer categoryId;
+
+    @ApiModelProperty("图书所属分类")
+    private String categoryName;
+}
Index: admin-api/src/main/java/com/briup/bookstore/web/controller/BookController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/admin-api/src/main/java/com/briup/bookstore/web/controller/BookController.java b/admin-api/src/main/java/com/briup/bookstore/web/controller/BookController.java
new file mode 100644
--- /dev/null	(date 1690122173158)
+++ b/admin-api/src/main/java/com/briup/bookstore/web/controller/BookController.java	(date 1690122173158)
@@ -0,0 +1,83 @@
+package com.briup.bookstore.web.controller;
+
+import com.briup.bookstore.po.Book;
+import com.briup.bookstore.response.Result;
+import com.briup.bookstore.service.BookService;
+import com.briup.bookstore.vo.BookSearchVO;
+import io.swagger.annotations.Api;
+import io.swagger.annotations.ApiImplicitParam;
+import io.swagger.annotations.ApiImplicitParams;
+import io.swagger.annotations.ApiOperation;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.web.bind.annotation.*;
+
+import java.util.List;
+
+/**
+ * @ClassName: BookController
+ * @Description: 图书管理模块相关借口开发
+ * @Author: songjl
+ * @Date: 2023/7/20 09:21
+ * @Version: v1.0
+ */
+@RestController
+@Api(tags = "图书模块")
+@RequestMapping("/book")
+public class BookController {
+
+    @Autowired
+    private BookService bookService;
+
+    @ApiOperation("分页多条件查询图书信息")
+    @GetMapping("{pageNum}/{pageSize}")
+    private Result getPageBook(@PathVariable("pageNum") Integer pageNum,
+                               @PathVariable("pageSize") Integer pageSize,
+                               BookSearchVO bookSearchVO) {
+        return Result.success(bookService.getPageBook(pageNum, pageSize, bookSearchVO));
+    }
+
+    @ApiOperation("新增图书信息")
+    @PostMapping
+    private Result saveBook(@RequestBody Book book) {
+        bookService.saveBook(book);
+        return Result.success();
+    }
+
+    @ApiOperation("修改图书信息")
+    @PutMapping
+    private Result modifyBook(@RequestBody Book book) {
+        bookService.modifyBook(book);
+        return Result.success();
+    }
+
+    @ApiOperation("修改图书状态")
+    @PutMapping("{id}/{status}")
+    private Result modifyStatus(@PathVariable Integer id, @PathVariable Integer status) {
+        bookService.modifyStatus(id, status);
+        return Result.success();
+    }
+
+    @ApiOperation("删除图书信息")
+    @DeleteMapping("{id}")
+    private Result removeBook(@PathVariable Integer id) {
+        bookService.removeBook(id);
+        return Result.success();
+    }
+
+    @ApiOperation("批量删除图书信息")
+    @DeleteMapping
+    private Result removeBatchByIds(@RequestBody List<Integer> ids) {
+        bookService.removeBatchByIds(ids);
+        return Result.success();
+    }
+
+    @ApiOperation("根据图书id查询图书信息")
+    @ApiImplicitParams({
+            @ApiImplicitParam(name = "id", value = "图书编号", required = true)
+    })
+    @GetMapping("{id}")
+    private Result getBookById(@PathVariable Integer id) {
+        return Result.success(bookService.getBookById(id));
+    }
+
+}
Index: dao/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># \\u6570\\u636E\\u6E90\\u914D\\u7F6E\nspring.datasource.driver-class-name = com.mysql.cj.jdbc.Driver\n# spring.datasource.url = jdbc:mysql://10.0.1.183:3306/estore?characterEncoding=utf-8&serverTimezone=Asia/Shanghai&allowMultiQueries=true\nspring.datasource.url=jdbc:mysql://localhost:3306/book_store?characterEncoding=utf-8&serverTimezone=Asia/Shanghai&allowMultiQueries=true\nspring.datasource.username = root\nspring.datasource.password = root\n\n# Mybatis\\u914D\\u7F6E\n# \\u914D\\u7F6EXML\\u6620\\u5C04\\u6587\\u4EF6\\u4E2D\\u6307\\u5B9A\\u7684\\u5B9E\\u4F53\\u7C7B\\u522B\\u540D\\u8DEF\\u5F84\nmybatis.type-aliases-package = com.briup.bean\n# \\u914D\\u7F6EMyBatis\\u7684xml\\u914D\\u7F6E\\u6587\\u4EF6\\u8DEF\\u5F84\nmybatis.mapper-locations = classpath:mappers/*.xml\n# \\u5F00\\u542F\\u9A7C\\u5CF0uName\\u81EA\\u52A8\\u6620\\u5C04\\u5230u_name\nmybatis.configuration.map-underscore-to-camel-case = true\n\n\n# \\u914D\\u7F6Emapper\\u5C42\\u65E5\\u5FD7\\u8F93\\u51FA\\u7C7B\\u578B\\u4E3Adebug\nlogging.level.com.briup.bookstore.mapper = debug
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/dao/src/main/resources/application.properties b/dao/src/main/resources/application.properties
--- a/dao/src/main/resources/application.properties	(revision 4f43aa26c3a87a4356b63f3546b67bce89f1593b)
+++ b/dao/src/main/resources/application.properties	(date 1690123158714)
@@ -1,15 +1,16 @@
 # \u6570\u636E\u6E90\u914D\u7F6E
 spring.datasource.driver-class-name = com.mysql.cj.jdbc.Driver
 # spring.datasource.url = jdbc:mysql://10.0.1.183:3306/estore?characterEncoding=utf-8&serverTimezone=Asia/Shanghai&allowMultiQueries=true
-spring.datasource.url=jdbc:mysql://localhost:3306/book_store?characterEncoding=utf-8&serverTimezone=Asia/Shanghai&allowMultiQueries=true
+# spring.datasource.url=jdbc:mysql://localhost:3306/book_store?characterEncoding=utf-8&serverTimezone=Asia/Shanghai&allowMultiQueries=true
+spring.datasource.url=jdbc:mysql://localhost:3306/estore?characterEncoding=utf-8&serverTimezone=Asia/Shanghai&allowMultiQueries=true
 spring.datasource.username = root
-spring.datasource.password = root
+spring.datasource.password = chris@sjl
 
 # Mybatis\u914D\u7F6E
 # \u914D\u7F6EXML\u6620\u5C04\u6587\u4EF6\u4E2D\u6307\u5B9A\u7684\u5B9E\u4F53\u7C7B\u522B\u540D\u8DEF\u5F84
 mybatis.type-aliases-package = com.briup.bean
 # \u914D\u7F6EMyBatis\u7684xml\u914D\u7F6E\u6587\u4EF6\u8DEF\u5F84
-mybatis.mapper-locations = classpath:mappers/*.xml
+mybatis.mapper-locations = classpath:mappers/**/*.xml
 # \u5F00\u542F\u9A7C\u5CF0uName\u81EA\u52A8\u6620\u5C04\u5230u_name
 mybatis.configuration.map-underscore-to-camel-case = true
 
Index: common/src/main/java/com/briup/bookstore/vo/BookSearchVO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/common/src/main/java/com/briup/bookstore/vo/BookSearchVO.java b/common/src/main/java/com/briup/bookstore/vo/BookSearchVO.java
new file mode 100644
--- /dev/null	(date 1690114456045)
+++ b/common/src/main/java/com/briup/bookstore/vo/BookSearchVO.java	(date 1690114456045)
@@ -0,0 +1,27 @@
+package com.briup.bookstore.vo;
+
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+
+/**
+ * @ClassName: BookSearchVO
+ * @Description: 接收前断传递过来的查询条件
+ * @Author: songjl
+ * @Date: 2023/7/20 16:00
+ * @Version: v1.0
+ */
+@ApiModel("图书查询条件对象")
+@Data
+public class BookSearchVO {
+
+    @ApiModelProperty("书名")
+    private String name;
+
+    @ApiModelProperty("作者")
+    private String author;
+
+    @ApiModelProperty("出版社")
+    private String publisher;
+
+}
Index: dao/src/main/java/com/briup/bookstore/mapper/BookMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.briup.bookstore.mapper;\n\n\nimport org.springframework.stereotype.Repository;\n\n/**\n* @author qinyc\n* @description 针对表【es_book】的数据库操作Mapper\n* @createDate 2023-07-18 21:32:19\n* @Entity com.briup.bookstore.po.Book\n*/\n@Repository\npublic interface BookMapper{\n\n}\n\n\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dao/src/main/java/com/briup/bookstore/mapper/BookMapper.java b/dao/src/main/java/com/briup/bookstore/mapper/BookMapper.java
--- a/dao/src/main/java/com/briup/bookstore/mapper/BookMapper.java	(revision 4f43aa26c3a87a4356b63f3546b67bce89f1593b)
+++ b/dao/src/main/java/com/briup/bookstore/mapper/BookMapper.java	(date 1690128509332)
@@ -1,8 +1,14 @@
 package com.briup.bookstore.mapper;
 
 
+import com.briup.bookstore.po.Book;
+import com.briup.bookstore.vo.BookSearchVO;
+import com.briup.bookstore.vo.BookShowVO;
+import org.apache.ibatis.annotations.Param;
 import org.springframework.stereotype.Repository;
 
+import java.util.List;
+
 /**
 * @author qinyc
 * @description 针对表【es_book】的数据库操作Mapper
@@ -11,7 +17,12 @@
 */
 @Repository
 public interface BookMapper{
-
+    Book selectBookById(Integer id);
+    void insertBook(Book book);
+    void updateBook(Book book);
+    void deleteBookById(Integer id);
+    void updateBookStatus(@Param("id") Integer id,@Param("status") Integer status);
+    void deleteBookByIds(@Param("ids") List<Integer> ids);
 }
 
 
Index: common/src/main/java/com/briup/bookstore/exception/BookStoreException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.briup.bookstore.exception;\n\npublic class BookStoreException extends  RuntimeException {\n    /*\n     * 状态码\n     */\n    private int code;\n\n    /*\n     * 提示信息\n     */\n    private String msg;\n\n    /*\n     * 获取状态码\n     */\n    public int getCode() {\n        return code;\n    }\n\n    /*\n     * 获取提示信息\n     */\n    public String getMsg() {\n        return msg;\n    }\n\n    /*\n     * 构造器，将枚举状态码和提示信息作为参数传入\n     */\n    public BookStoreException(CodeMsgEnum codeMsgEnum) {\n        super(codeMsgEnum.getMsg());\n        this.code = codeMsgEnum.getCode();\n        this.msg = codeMsgEnum.getMsg();\n    }\n\n    /*\n     * 构造器 ，将状态码和提示信息作为参数传入\n     */\n    public BookStoreException(int code,String msg){\n        this.code = code;\n        this.msg = msg;\n    }\n\n    public enum CodeMsgEnum {\n        //响应失败\n        ERROR(500,\"服务器内部错误\"),\n\n        //用户名不能为空\n        USER_USERNAME_IS_NOT_NULL(501,\"用户名不能为空\"),\n\n        //密码不能为空\n        USER_PASSWORD_IS_NOT_NULL(502,\"密码不能为空\"),\n\n        //用户名或密码错误\n        USER_USERNAME_OR_PASSWORD_ERROR(503,\"用户名或密码错误\"),\n\n        //用户未登录\n        USER_IS_NOT_LOGIN(504,\"用户未登录\"),\n\n        //登录过期\n        USER_LOGIN_TIMEOUT(505,\"用户身份登录过期\"),\n\n        //令牌失效\n        USER_TOKEN_IS_INVALID(506,\"无效token\"),\n\n        //用户ID不能为空\n        USER_ID_IS_NOT_NULL(507,\"管理员ID不能为空\"),\n\n        //用户对象不存在\n        USER_IS_NOT_EXIST(508,\"管理员对象不存在\"),\n\n        //用户用户名已存在\n        USER_USERNAME_IS_EXIST(509,\"管理员用户名已存在\"),\n\n        //待删除用户ID集合不能为空\n        TO_BE_DELETE_USER_IDS_IS_NOT_NULL(510,\"待删除管理员ID集合不能为空\"),\n\n        //文件格式错误\n        FILE_TYPE_ERROR(511,\"图片类型错误，只能是 .jpg 或 .png格式 \"),\n\n\n        //登录账号与登录系统不符\n        LOGIN_IDENTITY_IS_INVALID(512,\"账号权限不足，请联系管理员\"),\n\n        //删除用户失败，待删除用户存在购物车信息、订单信息、收货地址信息，请检查删除完毕后重试\n        DELETE_USER_FAIL(513,\"删除用户失败，待删除用户存在购物车信息、订单信息、收货地址信息，请检查删除完毕后重试\"),\n\n        //账号已被封禁，请联系管理员\n        USER_STATUS_CLOSE(514,\"账号已被封禁，请联系管理员\"),\n\n        //分类名称已经存在\n        CATEGORY_NAME_IS_EXIST(601,\"分类名称已经存在！\"),\n\n        //指定的分类信息不存在\n        CATEGORY_IS_NOT_EXIST(602,\"指定的分类信息不存在\"),\n\n        //待删除分类ID集合不能为空\n        TO_BE_DELETE_CATEGORY_IDS_IS_NOT_NULL(603,\"待删除分类ID集合不能为空\"),\n\n        //删除分类信息失败，待删除分类有关联的图书信息、父分类下有子分类未被删除，请检查删除完毕后重试\n        DELETE_CATEGORY_FAIL(604,\"删除分类信息失败，待删除分类有关联的图书信息、父分类下有子分类未被删除，请检查删除完毕后重试\"),\n        ;\n\n\n        //响应状态码\n        int code;\n        //响应信息\n        String msg;\n\n        //全参构造器\n        CodeMsgEnum(int code, String errorMessage){\n            this.code = code;\n            this.msg = errorMessage;\n        }\n\n        //获取响应状态码\n        public int getCode() {\n            return code;\n        }\n\n        //获取响应信息\n        public String getMsg() {\n            return msg;\n        }\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/common/src/main/java/com/briup/bookstore/exception/BookStoreException.java b/common/src/main/java/com/briup/bookstore/exception/BookStoreException.java
--- a/common/src/main/java/com/briup/bookstore/exception/BookStoreException.java	(revision 4f43aa26c3a87a4356b63f3546b67bce89f1593b)
+++ b/common/src/main/java/com/briup/bookstore/exception/BookStoreException.java	(date 1690128232801)
@@ -100,6 +100,16 @@
 
         //删除分类信息失败，待删除分类有关联的图书信息、父分类下有子分类未被删除，请检查删除完毕后重试
         DELETE_CATEGORY_FAIL(604,"删除分类信息失败，待删除分类有关联的图书信息、父分类下有子分类未被删除，请检查删除完毕后重试"),
+
+        BOOK_NOT_EXIST(701, "图书信息不存在，请刷新页面重试"),
+
+        BOOK_NAME_IS_NULL(702, "图书名称为空"),
+
+        BOOK_AUTHOR_IS_NULL(703, "图书作者为空"),
+
+        BOOK_PUBLISHER_IS_NULL(704, "图书出版社为空"),
+
+        CATEGORY_NOT_EXIST(705, "分类信息不存在，图书添加失败")
         ;
 
 
Index: common/src/main/java/com/briup/bookstore/po/ext/BookExtend.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/common/src/main/java/com/briup/bookstore/po/ext/BookExtend.java b/common/src/main/java/com/briup/bookstore/po/ext/BookExtend.java
new file mode 100644
--- /dev/null	(date 1690122811850)
+++ b/common/src/main/java/com/briup/bookstore/po/ext/BookExtend.java	(date 1690122811850)
@@ -0,0 +1,24 @@
+package com.briup.bookstore.po.ext;
+
+import com.briup.bookstore.po.Book;
+import com.briup.bookstore.po.Category;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+
+/**
+ * @ClassName: BookExtend
+ * @Description: 图书拓展类
+ * @Author: songjl
+ * @Date: 2023/7/23 22:27
+ * @Version: v1.0
+ */
+@EqualsAndHashCode(callSuper = true)
+@ApiModel("图书拓展类")
+@Data
+public class BookExtend extends Book {
+
+    @ApiModelProperty("图书所属分类")
+    private Category category;
+}
Index: service/src/main/java/com/briup/bookstore/service/BookService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.briup.bookstore.service;\n\n/**\n* @author qinyc\n* @description 针对表【es_book】的数据库操作Service\n* @createDate 2023-07-18 21:32:19\n*/\npublic interface BookService {\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/src/main/java/com/briup/bookstore/service/BookService.java b/service/src/main/java/com/briup/bookstore/service/BookService.java
--- a/service/src/main/java/com/briup/bookstore/service/BookService.java	(revision 4f43aa26c3a87a4356b63f3546b67bce89f1593b)
+++ b/service/src/main/java/com/briup/bookstore/service/BookService.java	(date 1690123025671)
@@ -1,5 +1,13 @@
 package com.briup.bookstore.service;
 
+import com.briup.bookstore.po.Book;
+import com.briup.bookstore.po.ext.BookExtend;
+import com.briup.bookstore.vo.BookSearchVO;
+import com.briup.bookstore.vo.BookShowVO;
+import com.github.pagehelper.PageInfo;
+
+import java.util.List;
+
 /**
 * @author qinyc
 * @description 针对表【es_book】的数据库操作Service
@@ -7,4 +15,17 @@
 */
 public interface BookService {
 
+    Book getBookById(Integer id);
+
+    PageInfo<BookExtend> getPageBook(Integer pageNum, Integer pageSize, BookSearchVO bookSearchVO);
+
+    void saveBook(Book book);
+
+    void modifyBook(Book book);
+
+    void removeBook(Integer id);
+
+    void modifyStatus(Integer id, Integer status);
+
+    void removeBatchByIds(List<Integer> ids);
 }
Index: dao/src/main/java/com/briup/bookstore/mapper/ext/BookExtendMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dao/src/main/java/com/briup/bookstore/mapper/ext/BookExtendMapper.java b/dao/src/main/java/com/briup/bookstore/mapper/ext/BookExtendMapper.java
new file mode 100644
--- /dev/null	(date 1690123265598)
+++ b/dao/src/main/java/com/briup/bookstore/mapper/ext/BookExtendMapper.java	(date 1690123265598)
@@ -0,0 +1,14 @@
+package com.briup.bookstore.mapper.ext;
+
+import com.briup.bookstore.po.ext.BookExtend;
+import com.briup.bookstore.vo.BookSearchVO;
+import org.apache.ibatis.annotations.Param;
+import org.springframework.stereotype.Repository;
+
+import java.util.List;
+
+@Repository
+public interface BookExtendMapper {
+
+    List<BookExtend> selectBooksByCondition(@Param("bookSearchVO") BookSearchVO bookSearchVO);
+}
