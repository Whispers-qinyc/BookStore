Index: service/src/main/java/com/briup/bookstore/service/impl/BookServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.briup.bookstore.service.impl;\n\n\nimport com.briup.bookstore.service.BookService;\nimport org.springframework.stereotype.Service;\n\n/**\n* @author qinyc\n* @description 针对表【es_book】的数据库操作Service实现\n* @createDate 2023-07-18 21:32:19\n*/\n@Service\npublic class BookServiceImpl implements BookService{\n\n}\n\n\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/src/main/java/com/briup/bookstore/service/impl/BookServiceImpl.java b/service/src/main/java/com/briup/bookstore/service/impl/BookServiceImpl.java
--- a/service/src/main/java/com/briup/bookstore/service/impl/BookServiceImpl.java	(revision f0a17d35e8fb248905977b20d79cc865dc4a6bf5)
+++ b/service/src/main/java/com/briup/bookstore/service/impl/BookServiceImpl.java	(date 1689922398698)
@@ -1,8 +1,19 @@
 package com.briup.bookstore.service.impl;
 
 
+import com.briup.bookstore.exception.BookStoreException;
+import com.briup.bookstore.mapper.BookMapper;
+import com.briup.bookstore.po.Book;
 import com.briup.bookstore.service.BookService;
+import com.briup.bookstore.vo.BookSearchVO;
+import com.briup.bookstore.vo.BookShowVO;
+import com.github.pagehelper.PageHelper;
+import com.github.pagehelper.PageInfo;
+import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
+import org.springframework.util.StringUtils;
+
+import java.util.List;
 
 /**
 * @author qinyc
@@ -12,6 +23,95 @@
 @Service
 public class BookServiceImpl implements BookService{
 
+    @Autowired
+    private BookMapper bookMapper;
+
+    @Override
+    public Book getBookById(Integer id) {
+        Book book = bookMapper.selectBookById(id);
+        if (book == null) {
+            throw new BookStoreException(BookStoreException.CodeMsgEnum.BOOK_NOT_EXIST);
+        }
+        return book;
+    }
+
+    @Override
+    public PageInfo<BookShowVO> getPageBook(Integer pageNum, Integer pageSize, BookSearchVO bookSearchVO) {
+        // 开启分页
+        PageHelper.startPage(pageNum, pageSize);
+        // 条件查询图书信息
+        List<Book> books = bookMapper.selectBooksByCondition(bookSearchVO);
+        // 将查询出的Book对象转换成BookShowVO对象
+        // 封装分页对象返回
+        return new PageInfo<>(books);
+    }
+
+    @Override
+    public void saveBook(Book book) {
+        // 参数校验
+        this.validate(book);
+        // 执行添加
+        bookMapper.insertBook(book);
+    }
+
+    @Override
+    public void modifyBook(Book book) {
+        // 参数校验
+        this.validate(book);
+        // 判断图书信息是否存在
+        bookIsOrNotExist(book.getId());
+        // 执行修改，返回是否修改成功
+        bookMapper.updateBook(book);
+    }
+
+    @Override
+    public void removeBook(Integer id) {
+        // 判断图书信息是否存在
+        bookIsOrNotExist(id);
+        // 执行删除
+        bookMapper.deleteBookById(id);
+    }
+
+    @Override
+    public void removeBatchByIds(List<Integer> ids) {
+        // 判断要删除的图书信息是否都存在
+        for (Integer id : ids) {
+            bookIsOrNotExist(id);
+        }
+        // 都存在，则全部删除
+        bookMapper.deleteBookByIds(ids);
+    }
+
+    @Override
+    public void modifyStatus(Integer id, Integer status) {
+        // 判断图书信息是否存在
+        bookIsOrNotExist(id);
+        // 执行修改图书状态
+        bookMapper.updateBookStatus(id,status);
+    }
+
+    // 参数校验方法
+    private void validate(Book book) {
+        if (!StringUtils.hasText(book.getName())) {
+            throw new BookStoreException(BookStoreException.CodeMsgEnum.BOOK_NAME_IS_NULL);
+        }
+
+        if (!StringUtils.hasText(book.getAuthor())) {
+            throw new BookStoreException(BookStoreException.CodeMsgEnum.BOOK_AUTHOR_IS_NULL);
+        }
+
+        if (!StringUtils.hasText(book.getPublisher())) {
+            throw new BookStoreException(BookStoreException.CodeMsgEnum.BOOK_PUBLISHER_IS_NULL);
+        }
+    }
+
+    // 校验图书是否存在
+    private void bookIsOrNotExist(Integer id) {
+        Book book = bookMapper.selectBookById(id);
+        if (book == null) {
+            throw new BookStoreException(BookStoreException.CodeMsgEnum.BOOK_NOT_EXIST);
+        }
+    }
 }
 
 
Index: service/src/main/java/com/briup/bookstore/service/BookService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.briup.bookstore.service;\n\n/**\n* @author qinyc\n* @description 针对表【es_book】的数据库操作Service\n* @createDate 2023-07-18 21:32:19\n*/\npublic interface BookService {\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/src/main/java/com/briup/bookstore/service/BookService.java b/service/src/main/java/com/briup/bookstore/service/BookService.java
--- a/service/src/main/java/com/briup/bookstore/service/BookService.java	(revision f0a17d35e8fb248905977b20d79cc865dc4a6bf5)
+++ b/service/src/main/java/com/briup/bookstore/service/BookService.java	(date 1689922281026)
@@ -1,5 +1,12 @@
 package com.briup.bookstore.service;
 
+import com.briup.bookstore.po.Book;
+import com.briup.bookstore.vo.BookSearchVO;
+import com.briup.bookstore.vo.BookShowVO;
+import com.github.pagehelper.PageInfo;
+
+import java.util.List;
+
 /**
 * @author qinyc
 * @description 针对表【es_book】的数据库操作Service
@@ -7,4 +14,17 @@
 */
 public interface BookService {
 
+    Book getBookById(Integer id);
+
+    PageInfo<BookShowVO> getPageBook(Integer pageNum, Integer pageSize, BookSearchVO bookSearchVO);
+
+    void saveBook(Book book);
+
+    void modifyBook(Book book);
+
+    void removeBook(Integer id);
+
+    void modifyStatus(Integer id, Integer status);
+
+    void removeBatchByIds(List<Integer> ids);
 }
Index: dao/target/classes/mappers/BookMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper\n        PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"com.briup.bookstore.mapper.BookMapper\">\n\n    <resultMap id=\"BaseResultMap\" type=\"com.briup.bookstore.po.Book\">\n            <id property=\"id\" column=\"id\" jdbcType=\"INTEGER\"/>\n            <result property=\"name\" column=\"name\" jdbcType=\"VARCHAR\"/>\n            <result property=\"cover\" column=\"cover\" jdbcType=\"VARCHAR\"/>\n            <result property=\"description\" column=\"description\" jdbcType=\"VARCHAR\"/>\n            <result property=\"author\" column=\"author\" jdbcType=\"VARCHAR\"/>\n            <result property=\"publisher\" column=\"publisher\" jdbcType=\"VARCHAR\"/>\n            <result property=\"price\" column=\"price\" jdbcType=\"DOUBLE\"/>\n            <result property=\"storeNum\" column=\"store_num\" jdbcType=\"INTEGER\"/>\n            <result property=\"status\" column=\"status\" jdbcType=\"TINYINT\"/>\n            <result property=\"categoryId\" column=\"category_id\" jdbcType=\"INTEGER\"/>\n    </resultMap>\n\n    <sql id=\"Base_Column_List\">\n        id,name,cover,\n        description,author,publisher,\n        price,store_num,status,\n        category_id\n    </sql>\n</mapper>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dao/target/classes/mappers/BookMapper.xml b/dao/target/classes/mappers/BookMapper.xml
--- a/dao/target/classes/mappers/BookMapper.xml	(revision f0a17d35e8fb248905977b20d79cc865dc4a6bf5)
+++ b/dao/target/classes/mappers/BookMapper.xml	(date 1689921536187)
@@ -5,22 +5,91 @@
 <mapper namespace="com.briup.bookstore.mapper.BookMapper">
 
     <resultMap id="BaseResultMap" type="com.briup.bookstore.po.Book">
-            <id property="id" column="id" jdbcType="INTEGER"/>
-            <result property="name" column="name" jdbcType="VARCHAR"/>
-            <result property="cover" column="cover" jdbcType="VARCHAR"/>
-            <result property="description" column="description" jdbcType="VARCHAR"/>
-            <result property="author" column="author" jdbcType="VARCHAR"/>
-            <result property="publisher" column="publisher" jdbcType="VARCHAR"/>
-            <result property="price" column="price" jdbcType="DOUBLE"/>
-            <result property="storeNum" column="store_num" jdbcType="INTEGER"/>
-            <result property="status" column="status" jdbcType="TINYINT"/>
-            <result property="categoryId" column="category_id" jdbcType="INTEGER"/>
+        <id property="id" column="id" jdbcType="INTEGER"/>
+        <result property="name" column="name" jdbcType="VARCHAR"/>
+        <result property="cover" column="cover" jdbcType="VARCHAR"/>
+        <result property="description" column="description" jdbcType="VARCHAR"/>
+        <result property="author" column="author" jdbcType="VARCHAR"/>
+        <result property="publisher" column="publisher" jdbcType="VARCHAR"/>
+        <result property="price" column="price" jdbcType="DOUBLE"/>
+        <result property="storeNum" column="store_num" jdbcType="INTEGER"/>
+        <result property="status" column="status" jdbcType="TINYINT"/>
+        <result property="categoryId" column="category_id" jdbcType="INTEGER"/>
     </resultMap>
 
     <sql id="Base_Column_List">
-        id,name,cover,
+        id
+        ,name,cover,
         description,author,publisher,
         price,store_num,status,
         category_id
     </sql>
+
+    <!--添加图书信息-->
+    <insert id="insertBook">
+        insert into es_book(name, cover, description, author, publisher, price, store_num, category_id)
+        values (#{name}, #{cover}, #{description}, #{author}, #{publisher}, #{price}, #{storeNum}, #{categoryId})
+    </insert>
+
+    <!--修改图书信息-->
+    <update id="updateBook">
+        update es_book set name = #{name},
+                           cover = #{cover},
+                           description = #{description},
+                           author = #{author},
+                           publisher = #{publisher},
+                           price = #{price},
+                           store_num = #{storeNum},
+                           categoryId = #{categoryId}
+        where id = #{id}
+    </update>
+
+    <!--修改图书状态-->
+    <update id="updateBookStatus">
+        update es_book set status = #{status}
+        where id = #{id}
+    </update>
+
+    <!--根据图书编号删除图书-->
+    <delete id="deleteBookById">
+        delete from es_book where id = #{id}
+    </delete>
+
+    <!--批量删除图书信息-->
+    <delete id="deleteBookByIds">
+        delete from es_book where id in
+        <foreach collection="ids" open="(" close=")" separator="," item="id">
+            #{id}
+        </foreach>
+    </delete>
+
+    <!--根据图书编号查询图书信息-->
+    <select id="selectBookById" resultMap="BaseResultMap">
+        select
+        <include refid="Base_Column_List"/>
+        from es_book
+        where id = #{id}
+    </select>
+
+    <!--条件查询图书信息-->
+    <select id="selectBooksByCondition" resultMap="BaseResultMap">
+        select
+        <include refid="Base_Column_List"/>
+        from es_book
+        <where>
+            <if test="bookSearchVO.name != ''">
+                name like "%"#{bookSearchVO.name}"%"
+            </if>
+
+            <if test="bookSearchVO.author != ''">
+                and author like "%"#{bookSearchVO.author}"%"
+            </if>
+
+            <if test="bookSearchVO.publisher != ''">
+                and publisher like "%"#{bookSearchVO.publisher}"%"
+            </if>
+        </where>
+    </select>
+
+
 </mapper>
Index: dao/src/main/java/com/briup/bookstore/mapper/BookMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.briup.bookstore.mapper;\n\n\nimport org.springframework.stereotype.Repository;\n\n/**\n* @author qinyc\n* @description 针对表【es_book】的数据库操作Mapper\n* @createDate 2023-07-18 21:32:19\n* @Entity com.briup.bookstore.po.Book\n*/\n@Repository\npublic interface BookMapper{\n\n}\n\n\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dao/src/main/java/com/briup/bookstore/mapper/BookMapper.java b/dao/src/main/java/com/briup/bookstore/mapper/BookMapper.java
--- a/dao/src/main/java/com/briup/bookstore/mapper/BookMapper.java	(revision f0a17d35e8fb248905977b20d79cc865dc4a6bf5)
+++ b/dao/src/main/java/com/briup/bookstore/mapper/BookMapper.java	(date 1689920511245)
@@ -1,8 +1,13 @@
 package com.briup.bookstore.mapper;
 
 
+import com.briup.bookstore.po.Book;
+import com.briup.bookstore.vo.BookSearchVO;
+import org.apache.ibatis.annotations.Param;
 import org.springframework.stereotype.Repository;
 
+import java.util.List;
+
 /**
 * @author qinyc
 * @description 针对表【es_book】的数据库操作Mapper
@@ -11,7 +16,19 @@
 */
 @Repository
 public interface BookMapper{
+    Book selectBookById(Integer id);
+
+    List<Book> selectBooksByCondition(@Param("bookSearchVO") BookSearchVO bookSearchVO);
 
+    void insertBook(Book book);
+
+    void updateBook(Book book);
+
+    void deleteBookById(Integer id);
+
+    void updateBookStatus(@Param("id") Integer id,@Param("status") Integer status);
+
+    void deleteBookByIds(List<Integer> ids);
 }
 
 
Index: dao/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># \\u6570\\u636E\\u6E90\\u914D\\u7F6E\nspring.datasource.driver-class-name = com.mysql.cj.jdbc.Driver\n# spring.datasource.url = jdbc:mysql://10.0.1.183:3306/estore?characterEncoding=utf-8&serverTimezone=Asia/Shanghai&allowMultiQueries=true\nspring.datasource.url=jdbc:mysql://localhost:3306/book_store?characterEncoding=utf-8&serverTimezone=Asia/Shanghai&allowMultiQueries=true\nspring.datasource.username = root\nspring.datasource.password = root\n\n# Mybatis\\u914D\\u7F6E\n# \\u914D\\u7F6EXML\\u6620\\u5C04\\u6587\\u4EF6\\u4E2D\\u6307\\u5B9A\\u7684\\u5B9E\\u4F53\\u7C7B\\u522B\\u540D\\u8DEF\\u5F84\nmybatis.type-aliases-package = com.briup.bean\n# \\u914D\\u7F6EMyBatis\\u7684xml\\u914D\\u7F6E\\u6587\\u4EF6\\u8DEF\\u5F84\nmybatis.mapper-locations = classpath:mappers/*.xml\n# \\u5F00\\u542F\\u9A7C\\u5CF0uName\\u81EA\\u52A8\\u6620\\u5C04\\u5230u_name\nmybatis.configuration.map-underscore-to-camel-case = true\n\n\n# \\u914D\\u7F6Emapper\\u5C42\\u65E5\\u5FD7\\u8F93\\u51FA\\u7C7B\\u578B\\u4E3Adebug\nlogging.level.com.briup.mapper = debug
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/dao/src/main/resources/application.properties b/dao/src/main/resources/application.properties
--- a/dao/src/main/resources/application.properties	(revision f0a17d35e8fb248905977b20d79cc865dc4a6bf5)
+++ b/dao/src/main/resources/application.properties	(date 1689919393605)
@@ -1,9 +1,10 @@
 # \u6570\u636E\u6E90\u914D\u7F6E
 spring.datasource.driver-class-name = com.mysql.cj.jdbc.Driver
 # spring.datasource.url = jdbc:mysql://10.0.1.183:3306/estore?characterEncoding=utf-8&serverTimezone=Asia/Shanghai&allowMultiQueries=true
-spring.datasource.url=jdbc:mysql://localhost:3306/book_store?characterEncoding=utf-8&serverTimezone=Asia/Shanghai&allowMultiQueries=true
+# spring.datasource.url=jdbc:mysql://localhost:3306/book_store?characterEncoding=utf-8&serverTimezone=Asia/Shanghai&allowMultiQueries=true
+spring.datasource.url=jdbc:mysql://localhost:3306/estore?characterEncoding=utf-8&serverTimezone=Asia/Shanghai&allowMultiQueries=true
 spring.datasource.username = root
-spring.datasource.password = root
+spring.datasource.password = chris@sjl
 
 # Mybatis\u914D\u7F6E
 # \u914D\u7F6EXML\u6620\u5C04\u6587\u4EF6\u4E2D\u6307\u5B9A\u7684\u5B9E\u4F53\u7C7B\u522B\u540D\u8DEF\u5F84
Index: dao/src/main/resources/mappers/BookMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper\n        PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"com.briup.bookstore.mapper.BookMapper\">\n\n    <resultMap id=\"BaseResultMap\" type=\"com.briup.bookstore.po.Book\">\n            <id property=\"id\" column=\"id\" jdbcType=\"INTEGER\"/>\n            <result property=\"name\" column=\"name\" jdbcType=\"VARCHAR\"/>\n            <result property=\"cover\" column=\"cover\" jdbcType=\"VARCHAR\"/>\n            <result property=\"description\" column=\"description\" jdbcType=\"VARCHAR\"/>\n            <result property=\"author\" column=\"author\" jdbcType=\"VARCHAR\"/>\n            <result property=\"publisher\" column=\"publisher\" jdbcType=\"VARCHAR\"/>\n            <result property=\"price\" column=\"price\" jdbcType=\"DOUBLE\"/>\n            <result property=\"storeNum\" column=\"store_num\" jdbcType=\"INTEGER\"/>\n            <result property=\"status\" column=\"status\" jdbcType=\"TINYINT\"/>\n            <result property=\"categoryId\" column=\"category_id\" jdbcType=\"INTEGER\"/>\n    </resultMap>\n\n    <sql id=\"Base_Column_List\">\n        id,name,cover,\n        description,author,publisher,\n        price,store_num,status,\n        category_id\n    </sql>\n</mapper>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dao/src/main/resources/mappers/BookMapper.xml b/dao/src/main/resources/mappers/BookMapper.xml
--- a/dao/src/main/resources/mappers/BookMapper.xml	(revision f0a17d35e8fb248905977b20d79cc865dc4a6bf5)
+++ b/dao/src/main/resources/mappers/BookMapper.xml	(date 1689919393597)
@@ -5,22 +5,91 @@
 <mapper namespace="com.briup.bookstore.mapper.BookMapper">
 
     <resultMap id="BaseResultMap" type="com.briup.bookstore.po.Book">
-            <id property="id" column="id" jdbcType="INTEGER"/>
-            <result property="name" column="name" jdbcType="VARCHAR"/>
-            <result property="cover" column="cover" jdbcType="VARCHAR"/>
-            <result property="description" column="description" jdbcType="VARCHAR"/>
-            <result property="author" column="author" jdbcType="VARCHAR"/>
-            <result property="publisher" column="publisher" jdbcType="VARCHAR"/>
-            <result property="price" column="price" jdbcType="DOUBLE"/>
-            <result property="storeNum" column="store_num" jdbcType="INTEGER"/>
-            <result property="status" column="status" jdbcType="TINYINT"/>
-            <result property="categoryId" column="category_id" jdbcType="INTEGER"/>
+        <id property="id" column="id" jdbcType="INTEGER"/>
+        <result property="name" column="name" jdbcType="VARCHAR"/>
+        <result property="cover" column="cover" jdbcType="VARCHAR"/>
+        <result property="description" column="description" jdbcType="VARCHAR"/>
+        <result property="author" column="author" jdbcType="VARCHAR"/>
+        <result property="publisher" column="publisher" jdbcType="VARCHAR"/>
+        <result property="price" column="price" jdbcType="DOUBLE"/>
+        <result property="storeNum" column="store_num" jdbcType="INTEGER"/>
+        <result property="status" column="status" jdbcType="TINYINT"/>
+        <result property="categoryId" column="category_id" jdbcType="INTEGER"/>
     </resultMap>
 
     <sql id="Base_Column_List">
-        id,name,cover,
+        id
+        ,name,cover,
         description,author,publisher,
         price,store_num,status,
         category_id
     </sql>
+
+    <!--添加图书信息-->
+    <insert id="insertBook">
+        insert into es_book(name, cover, description, author, publisher, price, store_num, category_id)
+        values (#{name}, #{cover}, #{description}, #{author}, #{publisher}, #{price}, #{storeNum}, #{categoryId})
+    </insert>
+
+    <!--修改图书信息-->
+    <update id="updateBook">
+        update es_book set name = #{name},
+                           cover = #{cover},
+                           description = #{description},
+                           author = #{author},
+                           publisher = #{publisher},
+                           price = #{price},
+                           store_num = #{storeNum},
+                           categoryId = #{categoryId}
+        where id = #{id}
+    </update>
+
+    <!--修改图书状态-->
+    <update id="updateBookStatus">
+        update es_book set status = #{status}
+        where id = #{id}
+    </update>
+
+    <!--根据图书编号删除图书-->
+    <delete id="deleteBookById">
+        delete from es_book where id = #{id}
+    </delete>
+
+    <!--批量删除图书信息-->
+    <delete id="deleteBookByIds">
+        delete from es_book where id in
+        <foreach collection="ids" open="(" close=")" separator="," item="id">
+            #{id}
+        </foreach>
+    </delete>
+
+    <!--根据图书编号查询图书信息-->
+    <select id="selectBookById" resultMap="BaseResultMap">
+        select
+        <include refid="Base_Column_List"/>
+        from es_book
+        where id = #{id}
+    </select>
+
+    <!--条件查询图书信息-->
+    <select id="selectBooksByCondition" resultMap="BaseResultMap">
+        select
+        <include refid="Base_Column_List"/>
+        from es_book
+        <where>
+            <if test="bookSearchVO.name != ''">
+                name like "%"#{bookSearchVO.name}"%"
+            </if>
+
+            <if test="bookSearchVO.author != ''">
+                and author like "%"#{bookSearchVO.author}"%"
+            </if>
+
+            <if test="bookSearchVO.publisher != ''">
+                and publisher like "%"#{bookSearchVO.publisher}"%"
+            </if>
+        </where>
+    </select>
+
+
 </mapper>
Index: common/src/main/java/com/briup/bookstore/vo/BookShowVO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/common/src/main/java/com/briup/bookstore/vo/BookShowVO.java b/common/src/main/java/com/briup/bookstore/vo/BookShowVO.java
new file mode 100644
--- /dev/null	(date 1689919393606)
+++ b/common/src/main/java/com/briup/bookstore/vo/BookShowVO.java	(date 1689919393606)
@@ -0,0 +1,41 @@
+package com.briup.bookstore.vo;
+
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+
+/**
+ * @ClassName: BookShowVO
+ * @Description: 图书展示VO对象
+ * @Author: songjl
+ * @Date: 2023/7/21 09:12
+ * @Version: v1.0
+ */
+@ApiModel("图书展示实体")
+public class BookShowVO {
+    @ApiModelProperty("图书名称")
+    private String name;
+
+    @ApiModelProperty("图书封面图片")
+    private String cover;
+
+    @ApiModelProperty("图书简介")
+    private String description;
+
+    @ApiModelProperty("图书作者")
+    private String author;
+
+    @ApiModelProperty("图书出版社")
+    private String publisher;
+
+    @ApiModelProperty("图书价格")
+    private Double price;
+
+    @ApiModelProperty("库存数量")
+    private Integer storeNum;
+
+    @ApiModelProperty("图书状态  0: 上架 1：下架")
+    private Integer status;
+
+    @ApiModelProperty("图书所属分类")
+    private String categoryName;
+}
Index: common/src/main/java/com/briup/bookstore/vo/BookSearchVO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/common/src/main/java/com/briup/bookstore/vo/BookSearchVO.java b/common/src/main/java/com/briup/bookstore/vo/BookSearchVO.java
new file mode 100644
--- /dev/null	(date 1689919393603)
+++ b/common/src/main/java/com/briup/bookstore/vo/BookSearchVO.java	(date 1689919393603)
@@ -0,0 +1,27 @@
+package com.briup.bookstore.vo;
+
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+
+/**
+ * @ClassName: BookSearchVO
+ * @Description: 接收前断传递过来的查询条件
+ * @Author: songjl
+ * @Date: 2023/7/20 16:00
+ * @Version: v1.0
+ */
+@ApiModel("图书查询条件对象")
+@Data
+public class BookSearchVO {
+
+    @ApiModelProperty("书名")
+    private String name;
+
+    @ApiModelProperty("作者")
+    private String author;
+
+    @ApiModelProperty("出版社")
+    private String publisher;
+
+}
Index: admin-api/src/main/java/com/briup/bookstore/web/controller/BookController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/admin-api/src/main/java/com/briup/bookstore/web/controller/BookController.java b/admin-api/src/main/java/com/briup/bookstore/web/controller/BookController.java
new file mode 100644
--- /dev/null	(date 1689921540145)
+++ b/admin-api/src/main/java/com/briup/bookstore/web/controller/BookController.java	(date 1689921540145)
@@ -0,0 +1,83 @@
+package com.briup.bookstore.web.controller;
+
+import com.briup.bookstore.po.Book;
+import com.briup.bookstore.response.Result;
+import com.briup.bookstore.service.BookService;
+import com.briup.bookstore.vo.BookSearchVO;
+import io.swagger.annotations.Api;
+import io.swagger.annotations.ApiImplicitParam;
+import io.swagger.annotations.ApiImplicitParams;
+import io.swagger.annotations.ApiOperation;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.web.bind.annotation.*;
+
+import java.util.List;
+
+/**
+ * @ClassName: BookController
+ * @Description: 图书管理模块相关借口开发
+ * @Author: songjl
+ * @Date: 2023/7/20 09:21
+ * @Version: v1.0
+ */
+@RestController
+@Api(tags = "图书模块")
+@RequestMapping("/book")
+public class BookController {
+
+    @Autowired
+    private BookService bookService;
+
+    @ApiOperation("分页多条件查询图书信息")
+    @GetMapping("{pageNum}/{pageSize}")
+    private Result getPageBook(@PathVariable("pageNum") Integer pageNum,
+                               @PathVariable("pageSize") Integer pageSize,
+                               BookSearchVO bookSearchVO) {
+        return Result.success(bookService.getPageBook(pageNum, pageSize, bookSearchVO));
+    }
+
+    @ApiOperation("新增图书信息")
+    @PostMapping
+    private Result saveBook(@RequestBody Book book) {
+        bookService.saveBook(book);
+        return Result.success();
+    }
+
+    @ApiOperation("修改图书信息")
+    @PutMapping
+    private Result modifyBook(@RequestBody Book book) {
+        bookService.modifyBook(book);
+        return Result.success();
+    }
+
+    @ApiOperation("修改图书状态")
+    @PutMapping("{id}/{status}")
+    private Result modifyStatus(@PathVariable Integer id, @PathVariable Integer status) {
+        bookService.modifyStatus(id, status);
+        return Result.success();
+    }
+
+    @ApiOperation("删除图书信息")
+    @DeleteMapping("{id}")
+    private Result removeBook(@PathVariable Integer id) {
+        bookService.removeBook(id);
+        return Result.success();
+    }
+
+    @ApiOperation("批量删除图书信息")
+    @DeleteMapping
+    private Result removeBatchByIds(@RequestBody List<Integer> ids) {
+        bookService.removeBatchByIds(ids);
+        return Result.success();
+    }
+
+    @ApiOperation("根据图书id查询图书信息")
+    @ApiImplicitParams({
+            @ApiImplicitParam(name = "id", value = "图书编号", required = true)
+    })
+    @GetMapping("{id}")
+    private Result getBookById(@PathVariable Integer id) {
+        return Result.success(bookService.getBookById(id));
+    }
+
+}
Index: common/src/main/java/com/briup/bookstore/exception/BookStoreException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.briup.bookstore.exception;\n\npublic class BookStoreException extends  RuntimeException {\n    /*\n     * 状态码\n     */\n    private int code;\n\n    /*\n     * 提示信息\n     */\n    private String msg;\n\n    /*\n     * 获取状态码\n     */\n    public int getCode() {\n        return code;\n    }\n\n    /*\n     * 获取提示信息\n     */\n    public String getMsg() {\n        return msg;\n    }\n\n    /*\n     * 构造器，将枚举状态码和提示信息作为参数传入\n     */\n    public BookStoreException(CodeMsgEnum codeMsgEnum) {\n        super(codeMsgEnum.getMsg());\n        this.code = codeMsgEnum.getCode();\n        this.msg = codeMsgEnum.getMsg();\n    }\n\n    /*\n     * 构造器 ，将状态码和提示信息作为参数传入\n     */\n    public BookStoreException(int code,String msg){\n        this.code = code;\n        this.msg = msg;\n    }\n\n    public enum CodeMsgEnum {\n        //响应失败\n        ERROR(500,\"服务器内部错误\"),\n\n        //用户名不能为空\n        USER_USERNAME_IS_NOT_NULL(501,\"用户名不能为空\"),\n\n        //密码不能为空\n        USER_PASSWORD_IS_NOT_NULL(502,\"密码不能为空\"),\n\n        //用户名或密码错误\n        USER_USERNAME_OR_PASSWORD_ERROR(503,\"用户名或密码错误\"),\n\n        //用户未登录\n        USER_IS_NOT_LOGIN(504,\"用户未登录\"),\n\n        //登录过期\n        USER_LOGIN_TIMEOUT(505,\"用户身份登录过期\"),\n\n        //令牌失效\n        USER_TOKEN_IS_INVALID(506,\"无效token\"),\n\n        //用户ID不能为空\n        USER_ID_IS_NOT_NULL(507,\"管理员ID不能为空\"),\n\n        //用户对象不存在\n        USER_IS_NOT_EXIST(508,\"管理员对象不存在\"),\n\n        //用户用户名已存在\n        USER_USERNAME_IS_EXIST(509,\"管理员用户名已存在\"),\n\n        //待删除用户ID集合不能为空\n        TO_BE_DELETE_USER_IDS_IS_NOT_NULL(510,\"待删除管理员ID集合不能为空\"),\n\n        //文件格式错误\n        FILE_TYPE_ERROR(511,\"图片类型错误，只能是 .jpg 或 .png格式 \"),\n\n\n        //登录账号与登录系统不符\n        LOGIN_IDENTITY_IS_INVALID(512,\"账号权限不足，请联系管理员\"),\n\n        //删除用户失败，待删除用户存在购物车信息、订单信息、收货地址信息，请检查删除完毕后重试\n        DELETE_USER_FAIL(513,\"删除用户失败，待删除用户存在购物车信息、订单信息、收货地址信息，请检查删除完毕后重试\"),\n\n        //账号已被封禁，请联系管理员\n        USER_STATUS_CLOSE(514,\"账号已被封禁，请联系管理员\");\n        ;\n\n\n        //响应状态码\n        int code;\n        //响应信息\n        String msg;\n\n        //全参构造器\n        CodeMsgEnum(int code, String errorMessage){\n            this.code = code;\n            this.msg = errorMessage;\n        }\n\n        //获取响应状态码\n        public int getCode() {\n            return code;\n        }\n\n        //获取响应信息\n        public String getMsg() {\n            return msg;\n        }\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/common/src/main/java/com/briup/bookstore/exception/BookStoreException.java b/common/src/main/java/com/briup/bookstore/exception/BookStoreException.java
--- a/common/src/main/java/com/briup/bookstore/exception/BookStoreException.java	(revision f0a17d35e8fb248905977b20d79cc865dc4a6bf5)
+++ b/common/src/main/java/com/briup/bookstore/exception/BookStoreException.java	(date 1689919865372)
@@ -87,7 +87,18 @@
         DELETE_USER_FAIL(513,"删除用户失败，待删除用户存在购物车信息、订单信息、收货地址信息，请检查删除完毕后重试"),
 
         //账号已被封禁，请联系管理员
-        USER_STATUS_CLOSE(514,"账号已被封禁，请联系管理员");
+        USER_STATUS_CLOSE(514,"账号已被封禁，请联系管理员"),
+
+        //图书信息不存在
+        BOOK_NOT_EXIST(601, "图书信息不存在"),
+        BOOK_NAME_IS_NULL(602, "图书名称为空"),
+        BOOK_AUTHOR_IS_NULL(603, "图书作者为空"),
+        BOOK_PUBLISHER_IS_NULL(604, "图书出版社为空"),
+
+        BOOK_INSERT_FAIL(605, "图书新增失败"),
+        BOOK_UPDATE_FAIL(606, "图书修改失败"),
+        BOOK_DELETE_FAIL(607, "图书删除失败"),
+        BOOK_STATUS_UPDATE_FAIL(608, "图书状态修改失败")
         ;
 
 
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1689919393611)
+++ b/.idea/misc.xml	(date 1689919393611)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ExternalStorageConfigurationManager" enabled="true" />
+  <component name="MavenProjectsManager">
+    <option name="originalFiles">
+      <list>
+        <option value="$PROJECT_DIR$/pom.xml" />
+      </list>
+    </option>
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="zulu-1.8" project-jdk-type="JavaSDK" />
+</project>
\ No newline at end of file
Index: .idea/inspectionProfiles/Project_Default.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/inspectionProfiles/Project_Default.xml b/.idea/inspectionProfiles/Project_Default.xml
new file mode 100644
--- /dev/null	(date 1689920676267)
+++ b/.idea/inspectionProfiles/Project_Default.xml	(date 1689920676267)
@@ -0,0 +1,8 @@
+<component name="InspectionProjectProfileManager">
+  <profile version="1.0">
+    <option name="myName" value="Project Default" />
+    <inspection_tool class="JavadocDeclaration" enabled="true" level="WARNING" enabled_by_default="true">
+      <option name="ADDITIONAL_TAGS" value="description,createDate,ClassName:,Description:,Author:,Date:,Version:" />
+    </inspection_tool>
+  </profile>
+</component>
\ No newline at end of file
Index: .idea/dictionaries
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/dictionaries b/.idea/dictionaries
new file mode 100644
--- /dev/null	(date 1689919393609)
+++ b/.idea/dictionaries	(date 1689919393609)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectDictionaryState">
+    <dictionary name="chris" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1689919393615)
+++ b/.idea/vcs.xml	(date 1689919393615)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: dao/target/classes/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># \\u6570\\u636E\\u6E90\\u914D\\u7F6E\nspring.datasource.driver-class-name = com.mysql.cj.jdbc.Driver\n# spring.datasource.url = jdbc:mysql://10.0.1.183:3306/estore?characterEncoding=utf-8&serverTimezone=Asia/Shanghai&allowMultiQueries=true\nspring.datasource.url=jdbc:mysql://localhost:3306/book_store?characterEncoding=utf-8&serverTimezone=Asia/Shanghai&allowMultiQueries=true\nspring.datasource.username = root\nspring.datasource.password = root\n\n# Mybatis\\u914D\\u7F6E\n# \\u914D\\u7F6EXML\\u6620\\u5C04\\u6587\\u4EF6\\u4E2D\\u6307\\u5B9A\\u7684\\u5B9E\\u4F53\\u7C7B\\u522B\\u540D\\u8DEF\\u5F84\nmybatis.type-aliases-package = com.briup.bean\n# \\u914D\\u7F6EMyBatis\\u7684xml\\u914D\\u7F6E\\u6587\\u4EF6\\u8DEF\\u5F84\nmybatis.mapper-locations = classpath:mappers/*.xml\n# \\u5F00\\u542F\\u9A7C\\u5CF0uName\\u81EA\\u52A8\\u6620\\u5C04\\u5230u_name\nmybatis.configuration.map-underscore-to-camel-case = true\n\n\n# \\u914D\\u7F6Emapper\\u5C42\\u65E5\\u5FD7\\u8F93\\u51FA\\u7C7B\\u578B\\u4E3Adebug\nlogging.level.com.briup.mapper = debug
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/dao/target/classes/application.properties b/dao/target/classes/application.properties
--- a/dao/target/classes/application.properties	(revision f0a17d35e8fb248905977b20d79cc865dc4a6bf5)
+++ b/dao/target/classes/application.properties	(date 1689921536188)
@@ -1,9 +1,10 @@
 # \u6570\u636E\u6E90\u914D\u7F6E
 spring.datasource.driver-class-name = com.mysql.cj.jdbc.Driver
 # spring.datasource.url = jdbc:mysql://10.0.1.183:3306/estore?characterEncoding=utf-8&serverTimezone=Asia/Shanghai&allowMultiQueries=true
-spring.datasource.url=jdbc:mysql://localhost:3306/book_store?characterEncoding=utf-8&serverTimezone=Asia/Shanghai&allowMultiQueries=true
+# spring.datasource.url=jdbc:mysql://localhost:3306/book_store?characterEncoding=utf-8&serverTimezone=Asia/Shanghai&allowMultiQueries=true
+spring.datasource.url=jdbc:mysql://localhost:3306/estore?characterEncoding=utf-8&serverTimezone=Asia/Shanghai&allowMultiQueries=true
 spring.datasource.username = root
-spring.datasource.password = root
+spring.datasource.password = chris@sjl
 
 # Mybatis\u914D\u7F6E
 # \u914D\u7F6EXML\u6620\u5C04\u6587\u4EF6\u4E2D\u6307\u5B9A\u7684\u5B9E\u4F53\u7C7B\u522B\u540D\u8DEF\u5F84
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
new file mode 100644
--- /dev/null	(date 1689919393617)
+++ b/.idea/compiler.xml	(date 1689919393617)
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <annotationProcessing>
+      <profile default="true" name="Default" enabled="true" />
+      <profile name="Maven default annotation processors profile" enabled="true">
+        <sourceOutputDir name="target/generated-sources/annotations" />
+        <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
+        <outputRelativeToContentRoot value="true" />
+        <module name="dao" />
+        <module name="user-api" />
+        <module name="common" />
+        <module name="service" />
+        <module name="admin-api" />
+      </profile>
+    </annotationProcessing>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/jarRepositories.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/jarRepositories.xml b/.idea/jarRepositories.xml
new file mode 100644
--- /dev/null	(date 1689919393613)
+++ b/.idea/jarRepositories.xml	(date 1689919393613)
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RemoteRepositoriesConfiguration">
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Central Repository" />
+      <option name="url" value="https://maven.aliyun.com/nexus/content/groups/public/" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Maven Central repository" />
+      <option name="url" value="https://repo1.maven.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="jboss.community" />
+      <option name="name" value="JBoss Community repository" />
+      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
+    </remote-repository>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1689919393614)
+++ b/.idea/.gitignore	(date 1689919393614)
@@ -0,0 +1,8 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Editor-based HTTP Client requests
+/httpRequests/
+# Datasource local storage ignored files
+/dataSources/
+/dataSources.local.xml
